@prefix rdf:            <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs:           <http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl:            <http://www.w3.org/2002/07/owl#>.
@prefix skos:           <http://www.w3.org/2004/02/skos/core#>.
@prefix skosxl:         <http://www.w3.org/2008/05/skos-xl#>.
@prefix xsd:            <http://www.w3.org/2001/XMLSchema#>.

@prefix bibo:           <http://purl.org/ontology/bibo/> .
@prefix dcat:           <http://www.w3.org/ns/dcat#>.
@prefix dce:            <http://purl.org/dc/elements/1.1/>.
@prefix dct:            <http://purl.org/dc/terms/>.
@prefix dwc:            <http://rs.tdwg.org/dwc/terms/> .
@prefix dwciri:         <http://rs.tdwg.org/dwc/iri/> .
@prefix foaf:           <http://xmlns.com/foaf/0.1/>.
@prefix prov:           <http://www.w3.org/ns/prov#>.
@prefix ro:             <http://purl.obolibrary.org/obo/>.
@prefix schema:         <http://schema.org/>.
@prefix tn:             <http://rs.tdwg.org/ontology/voc/TaxonName#>.
@prefix void:           <http://rdfs.org/ns/void#>.
@prefix wd:             <http://www.wikidata.org/entity/>.           # Wikibase entity
@prefix wdt:            <http://www.wikidata.org/prop/direct/>.      # truthy assertions

@prefix taxref:         <http://taxref.mnhn.fr/lod/>.
@prefix taxrefbgs:      <http://taxref.mnhn.fr/lod/bioGeoStatus/>.
@prefix taxrefhab:      <http://taxref.mnhn.fr/lod/habitat/>.
@prefix taxrefloc:      <http://taxref.mnhn.fr/lod/loc/>.
@prefix taxrefprop:     <http://taxref.mnhn.fr/lod/property/>.
@prefix taxrefrk:       <http://taxref.mnhn.fr/lod/taxrank/>.
@prefix taxrefstatus:   <http://taxref.mnhn.fr/lod/status/>.

@prefix xrr:            <http://i3s.unice.fr/xr2rml#> .
@prefix rr:             <http://www.w3.org/ns/r2rml#> .
@prefix rml:            <http://semweb.mmlab.be/ns/rml#> .


<#SM>
    a rr:SubjectMap;
    rr:template "http://taxref.mnhn.fr/lod/location/{$.id}".

<#TM>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query """db.locations.find({$where: 'this.id == this.referenceId'}  )""" ];
    rr:subjectMap <#SM>;
    rr:predicateObjectMap [
        rr:predicate rdfs:isDefinedBy;
        rr:objectMap [ rr:constant <http://taxref.mnhn.fr/lod/taxref-ld>; rr:termType rr:IRI ];
    ];
	rr:predicateObjectMap [
        rr:predicate rdfs:label, wdt:P2561;             # P2561 = name
        rr:objectMap [ xrr:reference "$.name"; rr:datatype xsd:string ];
    ];
    rr:predicateObjectMap [
        rr:predicate wdt:P298;                          # ISO 3166-1 alpha-3 code
        rr:objectMap [ xrr:reference "$.iso31661"; rr:datatype xsd:string ];
    ];
	rr:predicateObjectMap [
        rr:predicate wdt:P300;                          # ISO 3166-2 code
        rr:objectMap [ xrr:reference "$.iso31662"; rr:datatype xsd:string ];
    ];
	rr:predicateObjectMap [
        rr:predicate wdt:P276;                          # location 
        rr:objectMap [ rr:template "http://taxref.mnhn.fr/lod/location/{$.parentId}" ];
    ];
	rr:predicateObjectMap [
        rr:predicate owl:sameAs;
        rr:objectMap [ xrr:reference "$.inseeUri"; rr:termType rr:IRI; ];
		rr:objectMap [ xrr:reference "$.ignUri"; rr:termType rr:IRI; ];
		rr:objectMap [ xrr:reference "$.wikidataUri"; rr:termType rr:IRI; ];
		rr:objectMap [ xrr:reference "$.geonamesUri"; rr:termType rr:IRI; ];
		rr:objectMap [ xrr:reference "$.sandreUri"; rr:termType rr:IRI; ];
    ];
    .

#------------------------------------- Administrative entities -------------------------------------

# Municipal arrondissement
<#TM_Arrondisement>
    a rr:TriplesMap;
    xrr:logicalSource [
        xrr:query """db.locations.find({$where: 'this.id == this.referenceId', 'adminLevel': 'Arrondissement municipal' }   )"""
    ];
    rr:subjectMap <#SM>;
	rr:predicateObjectMap [ rr:predicate rdf:type; rr:objectMap [ rr:constant wd:Q702842; rr:termType rr:IRI ]];
    .
# Commune of France
<#TM_Commune>
    a rr:TriplesMap;
    xrr:logicalSource [
        xrr:query """db.locations.find({$where: 'this.id == this.referenceId', 'adminLevel': 'Commune'})"""
    ];
    rr:subjectMap <#SM>;
	rr:predicateObjectMap [ rr:predicate rdf:type; rr:objectMap [ rr:constant wd:Q484170; rr:termType rr:IRI ]];
    .
# Departments of France
<#TM_Department>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query
        """db.locations.find({$where: 'this.id == this.referenceId', 'adminLevel': 'Département'})"""
    ];
    rr:subjectMap <#SM>;
	rr:predicateObjectMap [ rr:predicate rdf:type; rr:objectMap [ rr:constant wd:Q6465; rr:termType rr:IRI ]];
    .
# Region of France
<#TM_Region>
    a rr:TriplesMap;
    xrr:logicalSource [
        xrr:query """db.locations.find({$where: 'this.id == this.referenceId', 'adminLevel': 'Région'})"""
    ];
    rr:subjectMap <#SM>;
	rr:predicateObjectMap [ rr:predicate rdf:type; rr:objectMap [ rr:constant wd:Q36784; rr:termType rr:IRI ]];
    .
# Overseas collectivity
<#TM_OverseasCollectivity>
    a rr:TriplesMap;
    xrr:logicalSource [
        xrr:query """db.locations.find({$where: 'this.id == this.referenceId', "adminLevel": "Collectivité d'outre-mer"}  )"""
    ];
    rr:subjectMap <#SM>;
	rr:predicateObjectMap [ rr:predicate rdf:type; rr:objectMap [ rr:constant wd:Q719487; rr:termType rr:IRI ]];     # overseas collectivity 
    .
# Sovereign state
<#TM_State>
    a rr:TriplesMap;
    xrr:logicalSource [
        xrr:query """db.locations.find({$where: 'this.id == this.referenceId', 'adminLevel': 'État'})"""
    ];
    rr:subjectMap <#SM>;
	rr:predicateObjectMap [ rr:predicate rdf:type; rr:objectMap [ rr:constant wd:Q3624078; rr:termType rr:IRI ]];    # sovereign state
    .
# Administrative territorial entity of France
<#TM_Subdivision_administrative>
    a rr:TriplesMap;
    xrr:logicalSource [
        xrr:query """db.locations.find({$where: 'this.id == this.referenceId', 'adminLevel': 'Subdivision administrative'})"""
    ];
    rr:subjectMap <#SM>;
	rr:predicateObjectMap [ rr:predicate rdf:type; rr:objectMap [ rr:constant wd:Q192498; rr:termType rr:IRI ]];     # administrative territorial entity of France
    .

#------------------------------------- Geographical entities -------------------------------------

# Territorial entity
<#TM_Territoire_Region_Continental>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query """db.locations.find({$where: 'this.id == this.referenceId', 'adminLevel': { $in: ['Région continentale', 'Territoire'] }})""" ];
    rr:subjectMap <#SM>;
	rr:predicateObjectMap [ rr:predicate rdf:type; rr:objectMap [ rr:constant wd:Q1496967; rr:termType rr:IRI ]];
    .
# Archipelago
<#TM_Archipel>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query """db.locations.find({$where: 'this.id == this.referenceId', 'adminLevel': 'Archipel'})""" ];
    rr:subjectMap <#SM>;
	rr:predicateObjectMap [ rr:predicate rdf:type; rr:objectMap [ rr:constant wd:Q33837; rr:termType rr:IRI ]];
    .
# Island
<#TM_Island>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query """db.locations.find({$where: 'this.id == this.referenceId', 'adminLevel': 'Île'})""" ];
    rr:subjectMap <#SM>;
	rr:predicateObjectMap [ rr:predicate rdf:type; rr:objectMap [ rr:constant wd:Q23442; rr:termType rr:IRI ]];
    .

#------------------------------------- TAXREF-specific entities -------------------------------------

<#TM_ZM_ZMM>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query """db.locations.find({$where: 'this.id == this.referenceId', 'adminLevel': { $in: ['ZM', 'ZMM'] }} )""" ];
    rr:subjectMap <#SM>;
	rr:predicateObjectMap [ rr:predicate rdf:type; rr:objectMap [ rr:constant taxrefloc:MaritimeArea; rr:termType rr:IRI ]];
    .

#------------------------------------- Dealing with synonyms -------------------------------------

<#TM_synonyms>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query """db.locations.find({$where: 'this.id != this.referenceId'}  )""" ];
    rr:subjectMap <#SM>;
	rr:predicateObjectMap [
        rr:predicate owl:sameAs;
        rr:objectMap [ rr:template "http://taxref.mnhn.fr/lod/location/{$.referenceId}"; rr:termType rr:IRI; ];
    ];
    .
