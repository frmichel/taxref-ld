@prefix rdf:            <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs:           <http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl:            <http://www.w3.org/2002/07/owl#>.
@prefix skos:           <http://www.w3.org/2004/02/skos/core#>.
@prefix skosxl:         <http://www.w3.org/2008/05/skos-xl#>.
@prefix xsd:            <http://www.w3.org/2001/XMLSchema#>.

@prefix bibo:           <http://purl.org/ontology/bibo/> .
@prefix dcat:           <http://www.w3.org/ns/dcat#>.
@prefix dce:            <http://purl.org/dc/elements/1.1/>.
@prefix dct:            <http://purl.org/dc/terms/>.
@prefix dwc:            <http://rs.tdwg.org/dwc/terms/> .
@prefix dwciri:         <http://rs.tdwg.org/dwc/iri/> .
@prefix foaf:           <http://xmlns.com/foaf/0.1/>.
@prefix prov:           <http://www.w3.org/ns/prov#>.
@prefix ro:             <http://purl.obolibrary.org/obo/>.
@prefix schema:         <http://schema.org/>.
@prefix tn:             <http://rs.tdwg.org/ontology/voc/TaxonName#>.
@prefix void:           <http://rdfs.org/ns/void#>.
@prefix wd:             <http://www.wikidata.org/entity/>.           # Wikibase entity
@prefix wdt:            <http://www.wikidata.org/prop/direct/>.      # truthy assertions

@prefix taxref:         <http://taxref.mnhn.fr/lod/>.
@prefix taxrefbgs:      <http://taxref.mnhn.fr/lod/bioGeoStatus/>.
@prefix taxrefhab:      <http://taxref.mnhn.fr/lod/habitat/>.
@prefix taxrefloc:      <http://taxref.mnhn.fr/lod/loc/>.
@prefix taxrefprop:     <http://taxref.mnhn.fr/lod/property/>.
@prefix taxrefrk:       <http://taxref.mnhn.fr/lod/taxrank/>.
@prefix taxrefstatus:   <http://taxref.mnhn.fr/lod/status/>.

@prefix xrr:            <http://i3s.unice.fr/xr2rml#> .
@prefix rr:             <http://www.w3.org/ns/r2rml#> .
@prefix rml:            <http://semweb.mmlab.be/ns/rml#> .


#================= Statuses from legal documents (reglementations, directives, conventions) ================

<#SM_Taxon>
    a rr:SubjectMap;
    rr:template "http://taxref.mnhn.fr/lod/taxon/{$.taxon.referenceId}".

#=========================== Legal Status =============================

<#SM_LegalStatus>
    a rr:SubjectMap;
    rr:template "LegalStatus_{$.taxon.referenceId}_{$.statusCode}_{$.locationId}";
    rr:class taxrefstatus:LegalStatus;
    rr:termType rr:BlankNode.

# For every status associate the taxon with a blank node of type TaxonStatus
<#TM_Taxon_LegalStatus>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query 
      """db.statuses.find({statusTypeGroup: { $in:  ['Réglementation', 'Protection', 'Directives européennes', 'Conventions internationales']}})""" ];
    rr:subjectMap <#SM_Taxon>;
    rr:predicateObjectMap [
        rr:predicate taxrefprop:hasStatus;
        rr:objectMap [ rr:template "LegalStatus_{$.taxon.referenceId}_{$.statusCode}_{$.locationId}"; rr:termType rr:BlankNode ];
    ];
    .

# Create a LegalStatus blank node instance for each status
<#TM_LegalStatus_Common>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query 
      """db.statuses.find({statusTypeGroup: { $in:  ['Réglementation', 'Protection', 'Directives européennes', 'Conventions internationales']}})""" ];
    rr:subjectMap <#SM_LegalStatus>;
    rr:predicateObjectMap [
        rr:predicate dct:coverage, wdt:P3005;        # wdt:P3005 = valid in place
        rr:objectMap [ rr:template "http://taxref.mnhn.fr/lod/location/{$.locationId}" ];
    ];
    rr:predicateObjectMap [
        rr:predicate dct:source, wdt:P248;           # wdt:P248 = stated in
        rr:objectMap [ rr:template "http://taxref.mnhn.fr/lod/status/{$.statusTypeCode}/{$.statusCode}" ];
    ];
    rr:predicateObjectMap [ 
        rr:predicate dct:description; 
        rr:objectMap [ rr:template "{$.taxon.scientificName} has legal status {$.statusCode}"; rr:termType rr:Literal ];
    ];
    rr:predicateObjectMap [ 
        rr:predicate rdfs:label; 
        rr:objectMap [ rr:template "Legal status {$.statusCode}"; rr:termType rr:Literal ];
    ];
    .
    
<#TM_LegalStatus_EuropeanDirective>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query """db.statuses.find({statusTypeGroup: 'Directives européennes'})""" ];
    rr:subjectMap <#SM_LegalStatus>;
    rr:predicateObjectMap [
        rr:predicate taxrefprop:statusType;
        rr:objectMap [ rr:constant taxrefstatus:EuropeanDirective; rr:termType rr:IRI  ];
    ];
    .
    
<#TM_LegalStatus_InternConvention>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query """db.statuses.find({statusTypeGroup: 'Conventions internationales'})""" ];
    rr:subjectMap <#SM_LegalStatus>;
    rr:predicateObjectMap [
        rr:predicate taxrefprop:statusType;
        rr:objectMap [ rr:constant taxrefstatus:InternationalConvention; rr:termType rr:IRI  ];
    ];
    .

<#TM_LegalStatus_Regulation>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query """db.statuses.find({statusTypeGroup: 'Réglementation'})""" ];
    rr:subjectMap <#SM_LegalStatus>;
    rr:predicateObjectMap [
        rr:predicate taxrefprop:statusType;
        rr:objectMap [ rr:constant taxrefstatus:Regulation; rr:termType rr:IRI  ];
    ];
    .

<#TM_LegalStatus_Protection>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query """db.statuses.find({statusTypeGroup: 'Protection'})""" ];
    rr:subjectMap <#SM_LegalStatus>;
    rr:predicateObjectMap [
        rr:predicate taxrefprop:statusType;
        rr:objectMap [ rr:constant taxrefstatus:Protection; rr:termType rr:IRI  ];
    ];
    .

#=========================== RedList Statuses =============================

<#SM_RedListStatus>
    a rr:SubjectMap;
    rr:template "RL_QS_{$.taxon.referenceId}_{$.statusCode}_{$.locationId}";
    rr:class taxrefstatus:RedListStatus;
    rr:termType rr:BlankNode.

# For every status, associate the taxon with a blank node of type TaxonStatus
<#TM_Taxon_RedListStatuses>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query """db.statuses.find({statusTypeGroup: 'Liste rouge', statusCode: { $ne: 'NE' }})""" ];
    rr:subjectMap <#SM_Taxon>;
    rr:predicateObjectMap [
        rr:predicate taxrefprop:hasStatus;
        rr:objectMap [ rr:template "RL_QS_{$.taxon.referenceId}_{$.statusCode}_{$.locationId}"; rr:termType rr:BlankNode ];
    ];
    .

# Create an instance for each status
<#TM_RedListStatus_Common>
    a rr:TriplesMap;
    # Consider all Red List statuses except when status is NE = Non évalue (not assessed)
    xrr:logicalSource [ xrr:query """db.statuses.find({statusTypeGroup: 'Liste rouge', statusCode: { $ne: 'NE' }})""" ];;
    rr:subjectMap <#SM_RedListStatus>;
    rr:predicateObjectMap [
        rr:predicate dct:coverage, wdt:P3005;        # wdt:P3005 = valid in place
        rr:objectMap [ rr:template "http://taxref.mnhn.fr/lod/location/{$.locationId}" ];
    ];
    rr:predicateObjectMap [
        rr:predicate dct:source, wdt:P248;           # wdt:P248 = stated in
        rr:objectMap [ rr:template "http://taxref.mnhn.fr/lod/bib/{$.sourceId}" ];
    ];
    rr:predicateObjectMap [ 
        rr:predicate dct:description; 
        rr:objectMap [ rr:template "{$.taxon.scientificName} has IUCN Red List status {$.statusCode}"; rr:termType rr:Literal ];
    ];
    rr:predicateObjectMap [ 
        rr:predicate rdfs:label; 
        rr:objectMap [ rr:template "IUCN Red List status {$.statusCode}"; rr:termType rr:Literal ];
    ];
    .

# Create an instance for each record with a TAXREF-specific red list status value
<#TM_RedListStatus_Customized>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query """db.statuses.find({statusCode: {$in:  ['RE?', 'CR*', 'NA']}})""" ];
    rr:subjectMap <#SM_RedListStatus>;
    rr:predicateObjectMap [
        rr:predicate taxrefprop:statusValue;
        rr:objectMap [ rr:template "http://taxref.mnhn.fr/lod/status/RedList/{$.statusCode}" ];
    ].

<#TM_RedListStatus_LC>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query """db.statuses.find({statusCode: 'LC'})""" ];
    rr:subjectMap <#SM_RedListStatus>;
    rr:predicateObjectMap [
        rr:predicate taxrefprop:statusValue;
        rr:objectMap [ rr:constant wd:Q211005; rr:termType rr:IRI ]
    ].

<#TM_RedListStatus_NT>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query """db.statuses.find({statusCode: 'NT'})""" ];
    rr:subjectMap <#SM_RedListStatus>;
    rr:predicateObjectMap [
        rr:predicate taxrefprop:statusValue;
        rr:objectMap [ rr:constant wd:Q719675; rr:termType rr:IRI ]
    ].

<#TM_RedListStatus_VU>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query """db.statuses.find({statusCode: 'VU'})""" ];
    rr:subjectMap <#SM_RedListStatus>;
    rr:predicateObjectMap [
        rr:predicate taxrefprop:statusValue;
        rr:objectMap [ rr:constant wd:Q278113; rr:termType rr:IRI ]
    ].

<#TM_RedListStatus_EN>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query """db.statuses.find({statusCode: 'EN'})""" ];
    rr:subjectMap <#SM_RedListStatus>;
    rr:predicateObjectMap [
        rr:predicate taxrefprop:statusValue;
        rr:objectMap [ rr:constant wd:Q11394; rr:termType rr:IRI ]
    ].

<#TM_RedListStatus_CR>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query """db.statuses.find({statusCode: 'CR'})""" ];
    rr:subjectMap <#SM_RedListStatus>;
    rr:predicateObjectMap [
        rr:predicate taxrefprop:statusValue;
        rr:objectMap [ rr:constant wd:Q219127; rr:termType rr:IRI ]
    ].

<#TM_RedListStatus_EW>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query """db.statuses.find({statusCode: 'EW'})""" ];
    rr:subjectMap <#SM_RedListStatus>;
    rr:predicateObjectMap [
        rr:predicate taxrefprop:statusValue;
        rr:objectMap [ rr:constant wd:Q239509; rr:termType rr:IRI ]
    ].

<#TM_RedListStatus_EX>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query """db.statuses.find({statusCode: {$in: ['EX', 'Ex']}})""" ];
    rr:subjectMap <#SM_RedListStatus>;
    rr:predicateObjectMap [
        rr:predicate taxrefprop:statusValue;
        rr:objectMap [ rr:constant wd:Q237350; rr:termType rr:IRI ]
    ].

<#TM_RedListStatus_RE>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query """db.statuses.find({statusCode: 'RE'})""" ];
    rr:subjectMap <#SM_RedListStatus>;
    rr:predicateObjectMap [
        rr:predicate taxrefprop:statusValue;
        rr:objectMap [ rr:constant wd:Q10594853; rr:termType rr:IRI ]
    ].

<#TM_RedListStatus_DD>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query """db.statuses.find({statusCode: 'DD' })""" ];
    rr:subjectMap <#SM_RedListStatus>;
    rr:predicateObjectMap [
        rr:predicate taxrefprop:statusValue;
        rr:objectMap [ rr:constant wd:Q3245245; rr:termType rr:IRI ]
    ].


#=========================== Biogeographical Statuses =============================
<#TM_Taxon_BioGeographicalStatuses>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query """db.statuses.find({statusTypeGroup: 'Statut biogéographique'})""" ];
    rr:subjectMap <#SM_Taxon>;
    rr:predicateObjectMap [
        rr:predicate taxrefprop:hasStatus;
        rr:objectMap [ rr:template "BG_QS_{$.taxon.referenceId}_{$.statusCode}_{$.locationId}"; rr:termType rr:BlankNode ];
    ].

<#TM_BioGeographicalStatus>
    a rr:TriplesMap;
    xrr:logicalSource [ xrr:query """db.statuses.find({statusTypeGroup: 'Statut biogéographique'})""" ];
    rr:subjectMap [ 
        rr:template "BG_QS_{$.taxon.referenceId}_{$.statusCode}_{$.locationId}"; 
        rr:termType rr:BlankNode;
        rr:class taxrefstatus:BioGeographicalStatus;
    ];
    rr:predicateObjectMap [
        rr:predicate dct:coverage, wdt:P3005;        # wdt:P3005 = valid in place
        rr:objectMap [ rr:template "http://taxref.mnhn.fr/lod/location/{$.locationId}" ];
    ];
    rr:predicateObjectMap [
        rr:predicate dct:source, wdt:P248;           # wdt:P248 = stated in
        rr:objectMap [ rr:template "http://taxref.mnhn.fr/lod/bib/{$.sourceId}" ];
    ];
    rr:predicateObjectMap [
        rr:predicate taxrefprop:statusValue;
        rr:objectMap [ rr:template "http://taxref.mnhn.fr/lod/bioGeoStatus/{$.statusCode}" ];
    ];
    rr:predicateObjectMap [ 
        rr:predicate dct:description; 
        rr:objectMap [
            rr:template "{$.taxon.scientificName} has biogeographical status {$.statusCode} ({$.statusName}) in {$.locationName}";
            rr:termType rr:Literal
        ];
    ];
    rr:predicateObjectMap [ 
        rr:predicate rdfs:label; 
        rr:objectMap [
            rr:template "Biogeographical status {$.statusCode} ({$.statusName}) in {$.locationName}";
            rr:termType rr:Literal
        ];
    ];
    .
